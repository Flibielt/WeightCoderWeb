{"version":3,"sources":["img/illuminati.svg","img/illuminati2.svg","components/header/Header.js","components/Layout.js","util/Coder.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","context","state","image","logo","logoSize","handleMouseOver","bind","handleMouseOut","updateLogoSize","this","window","addEventListener","setState","redLogo","innerWidth","Navbar","className","variant","src","alt","title","onMouseOver","onMouseOut","Component","Layout","Fragment","children","weights","decodeWeightText","weight","i","Main","code","mode","byteMode","original","modified","handleInputChange","handleModeChange","handleByteChange","handleClear","handleCodeText","event","target","value","name","isCode","is2Byte","modifiedText","twoByteMode","encode2Bytes","b","a","codedText","length","c","charCodeAt","d","concat","codeText","second4bit","first4bit","decoded","trim","split","third4bit","fourth4bit","String","fromCharCode","decodeText","rows","id","onChange","type","onClick","checked","onstyle","offstyle","onlabel","offlabel","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4eb433c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illuminati.d367cf29.svg\";","module.exports = __webpack_public_path__ + \"static/media/illuminati2.db330a08.svg\";","import React, {Component} from \"react\";\nimport {Navbar} from \"react-bootstrap\";\n\nimport logo from \"../../img/illuminati.svg\";\nimport redLogo from \"../../img/illuminati2.svg\";\n\nclass Header extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state={\n            image: logo,\n            logoSize: \"w-75\"\n        }\n        this.handleMouseOver = this.handleMouseOver.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.updateLogoSize = this.updateLogoSize.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateLogoSize();\n        window.addEventListener('resize', this.updateLogoSize)\n    }\n\n    handleMouseOver() {\n        this.setState({image: redLogo});\n    }\n\n    handleMouseOut() {\n        this.setState({image: logo});\n    }\n\n    updateLogoSize() {\n        if (window.innerWidth >= 768) {\n            this.setState({logoSize: \"w-75\"});\n        } else {\n            this.setState({logoSize: \"w-25\"});\n        }\n    }\n\n    render() {\n        return (\n            <Navbar className=\"navbar navbar-fixed-top bg-info\" variant=\"dark\">\n                <div className=\"col-md-1 col-sm-2\">\n                    <img src={this.state.image}\n                         alt=\"The truth is way heavier\" title=\"The truth is way heavier\"\n                         className={this.state.logoSize}\n                         onMouseOver={this.handleMouseOver}\n                         onMouseOut={this.handleMouseOut}\n                    />\n                </div>\n                <div className=\"col-md-11 col-sm-10 text-xl-left\">Weight coder</div>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport Header from './header/Header'\n\nclass Layout extends Component{\n    render() {\n        return (\n            <React.Fragment>\n                <Header className=\"mr-1 ml-1\"/>\n                <main className=\"mt-3 mb-3 pr-1 pl-1\">\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Layout;","const weights = [\"==\", \":==:\", \"::==::\", \"[==]\", \":[==]:\", \"|==|\", \":|==|:\",\n    \"::|==|::\", \"[|==|]\",\":[|==|]:\", \"||==||\", \":||==||:\", \"::||==||::\",\n    \"[||==||]\", \":[||==||]:\", \"|||==|||\"];\n\nexport function codeText(original, encode2Bytes) {\n    let b;\n    let a;\n    let i;\n    let codedText = \"\";\n    if(encode2Bytes === true){\n        for (i = 0; i < original.length; i++){\n            const c = (original.charCodeAt(i) & 61440) / 4096;\n            const d = (original.charCodeAt(i) & 3840) / 256;\n            a = (original.charCodeAt(i) & 240)/16;\n            b = original.charCodeAt(i) & 15;\n            codedText = codedText.concat(weights[c], \" \", weights[d], \" \", weights[a], \" \", weights[b], \" \");\n        }\n    }\n    else{\n        for (i = 0; i < original.length; i++){\n            a = (original.charCodeAt(i) & 240) / 16;\n            b = original.charCodeAt(i) & 15;\n            codedText = codedText.concat(weights[a], \" \", weights[b], \" \");\n        }\n    }\n    return codedText;\n}\n\nfunction decodeWeightText(weight) {\n    for (let i = 0; i < 16; i++){\n        if(weight === weights[i]){\n            return i;\n        }\n    }\n}\n\nexport function decodeText(codedText, encode2Bytes){\n    let second4bit;\n    let first4bit;\n    let i;\n    codedText = codedText.trim()\n    let decoded = \"\";\n    codedText = codedText.split(\" \");\n    if(encode2Bytes === true){\n        for(i = 0; i < codedText.length-1; i=i+4){\n            first4bit = decodeWeightText(codedText[i]);\n            second4bit = decodeWeightText(codedText[i+1]);\n            const third4bit = decodeWeightText(codedText[i + 2]);\n            const fourth4bit = decodeWeightText(codedText[i + 3]);\n            decoded += String.fromCharCode(first4bit * 4096 + second4bit * 256 + third4bit * 16 + fourth4bit);\n        }\n    }\n    else{\n        for(i = 0; i < codedText.length-1; i=i+2){\n            first4bit = decodeWeightText(codedText[i]);\n            second4bit = decodeWeightText(codedText[i + 1]);\n            decoded += String.fromCharCode(first4bit * 16 + second4bit);\n        }\n    }\n    return decoded;\n}","import React, {Component} from \"react\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react/lib/bootstrap-switch-button-react\";\n\nimport { codeText, decodeText } from \"../util/Coder\"\n\nclass Main extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state={\n            code: true,\n            mode: \"Code\",\n            byteMode: 2,\n            original: \"\",\n            modified: \" \"\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleByteChange = this.handleByteChange.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.handleCodeText = this.handleCodeText.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({[name]: value});\n    }\n\n    handleModeChange(isCode) {\n        this.setState({code: isCode});\n        if (isCode) {\n            this.setState({mode: \"Code\"});\n        } else {\n            this.setState({mode: \"Decode\"});\n        }\n    }\n\n    handleByteChange(is2Byte) {\n        if (is2Byte) {\n            this.setState({byteMode: 2});\n        } else {\n            this.setState({byteMode: 1});\n        }\n    }\n\n    handleClear() {\n        this.setState({\n            original: \"\"\n        })\n    }\n\n    handleCodeText() {\n        const twoByteMode = this.state.byteMode === 2;\n        let modifiedText;\n\n        if (this.state.code) {\n            modifiedText = codeText(this.state.original, twoByteMode);\n        } else {\n            modifiedText = decodeText(this.state.original, twoByteMode);\n        }\n\n        this.setState({modified: modifiedText});\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"form-group mr-4 ml-4 mb-4\">\n                    <textarea className=\"form-control text-justify\" rows={5}  id=\"original\"\n                              value={this.state.original}\n                              name=\"original\"\n                              onChange={this.handleInputChange}/>\n                </div>\n                <div className=\"container-fluid ml-0 mr-0\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-sm-6 pl-2 pr-2 text-center\">\n                            <button type=\"button\" className=\"btn btn-primary w-50\"\n                            onClick={this.handleCodeText}\n                            >{this.state.mode}</button>\n                        </div>\n                        <div className=\"col-md-3 col-sm-6 pl-2 pr-2 text-center\">\n                            <button type=\"button\" className=\"btn btn-primary w-50\"\n                            onClick={this.handleClear}\n                            >Clear</button>\n                        </div>\n                        <div className=\"col-md-3 col-sm-6 pl-2 pr-2 text-center\">\n                            <BootstrapSwitchButton\n                                checked={this.state.code}\n                                onstyle=\"primary w-50\" offstyle=\"primary w-50\" onlabel=\"Code\" offlabel=\"Decode\"\n                                name=\"checked\"\n                                onChange={(checked => {this.handleModeChange(checked)})}\n                            />\n                        </div>\n                        <div className=\"col-md-3 col-sm-6 pl-2 pr-2 text-center\">\n                            <BootstrapSwitchButton\n                                checked={this.state.byteMode === 2}\n                                onstyle=\"primary w-50\" offstyle=\"primary w-50\" onlabel=\"2 byte\" offlabel=\"1 byte\"\n                                onChange={checked => {this.handleByteChange(checked)}}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"mr-4 ml-4 mt-4 p-2 text-justify border rounded\">\n                    {this.state.modified}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport Layout from \"./components/Layout\";\n\nimport \"./App.scss\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Main/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}